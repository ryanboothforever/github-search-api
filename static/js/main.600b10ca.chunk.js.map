{"version":3,"sources":["Pagination.js","Result.js","App.js","reportWebVitals.js","index.js"],"names":["library","add","faChevronRight","faChevronLeft","Pagination","pageNum","prevPage","nextPage","searchResults","setSearchResults","console","log","className","total_count","icon","onClick","size","Result","props","src","person","avatar_url","alt","login","starred_url","length","followers","type","id","App","useState","undefined","searchName","setSearchName","searchResultFollowers","setSearchResultFollowers","searchResultStarred","setSearchResultStarred","loading","setLoading","setPageNum","getFollowers","a","url","axios","get","res","data","getStarred","useEffect","getApi","search","placeholder","onChange","e","target","value","onKeyPress","key","items","map","starred","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQASAA,IAAQC,IAAIC,IAAgBC,KAE5B,IAgGeC,EAhGI,SAAC,GAMb,IALLC,EAKI,EALJA,QACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,cAEI,EADJC,iBAIA,OAFAC,QAAQC,IAAIH,GAGV,qBAAKI,UAAU,gBAAf,SAEE,qBAAKA,UAAU,MAAf,SACGJ,EAAcK,YAAc,IAAMR,EAAU,EAC3C,sBAAKO,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,IAAD,CACEE,KAAMX,IACNY,QAAST,EACTM,UAAU,qBACVI,KAAK,SAGT,qBAAKJ,UAAU,yBAAf,SACE,6BAAKP,EAAU,MAEjB,qBAAKO,UAAU,oCAAf,SACE,oBAAIA,UAAU,iBAAd,SAAgCP,MAElC,qBAAKO,UAAU,iCAAf,SACE,6BAAKP,EAAU,MAEjB,qBAAKO,UAAU,iCAAf,SACE,cAAC,IAAD,CACEE,KAAMZ,IACNa,QAASR,EACTK,UAAU,qBACVI,KAAK,YAKX,sBAAKJ,UAAU,WAAf,UACGP,EAAU,EACT,sBAAKO,UAAU,mCAAf,UACE,cAAC,IAAD,CACEE,KAAMX,IACNY,QAAST,EACTM,UAAU,qBACVI,KAAK,OAEP,qBAAKJ,UAAU,yBAAf,SACE,6BAAKP,EAAU,SAInB,wBAEDA,EAAU,IAAM,EACf,wBAEA,qBAAKO,UAAU,qCAAf,SACE,6BAAKP,EAAU,MAGnB,qBAAKO,UAAU,kBAAf,SACE,qBAAKA,UAAU,gCAAf,SACE,oBAAIA,UAAU,iBAAd,SAAgCP,QAGnCG,EAAcK,YAAc,GAAK,EAChC,wBAEA,qBAAKD,UAAU,qCAAf,SACE,6BAAKP,EAAU,MAGlBG,EAAcK,aAAe,GAC5B,wBAEA,qBAAKD,UAAU,iCAAf,SACE,cAAC,IAAD,CACEE,KAAMZ,IACNa,QAASR,EACTK,UAAU,qBACVI,KAAK,iBCrERC,MAzBf,SAAgBC,GACd,OACE,sBAAKN,UAAU,kCAAf,UACE,qBAAKA,UAAU,qCAAf,SACE,qBACEO,IAAKD,EAAME,OAAOC,WAClBT,UAAU,SACVU,IAAI,kBAGR,sBAAKV,UAAU,cAAf,uBACY,+BAAOM,EAAME,OAAOG,WAEhC,qBAAKX,UAAU,cAAf,SACE,6CAAgBM,EAAME,OAAOI,YAAYC,YAE3C,qBAAKb,UAAU,cAAf,SACE,+CAAkBM,EAAMQ,eAE1B,qBAAKd,UAAU,cAAf,SACE,0CAAaM,EAAME,OAAOO,YAlBwBT,EAAME,OAAOQ,KCQvE5B,IAAQC,IAAIC,IAAgBC,KA8Ib0B,MA7If,WAEE,MAA0CC,wBAASC,GAAnD,mBAAOvB,EAAP,KAAsBC,EAAtB,KAGA,EAAoCqB,mBAAS,IAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAA0DH,mBAAS,IAAnE,mBAAOI,EAAP,KAA8BC,EAA9B,KACA,EAAsDL,mBAAS,IAA/D,mBAAOM,EAAP,KAA4BC,EAA5B,KAEA,EAA8BP,oBAAS,GAAvC,mBAAOQ,EAAP,KAAgBC,EAAhB,KACA,EAA8BT,mBAAS,GAAvC,mBAAOzB,EAAP,KAAgBmC,EAAhB,KAEMC,EAAY,uCAAG,8BAAAC,EAAA,6DACbC,EADa,uCACyBX,EADzB,uBAEDY,IAAMC,IAAIF,GAFT,OAEbG,EAFa,OAGnBX,EAAyBW,EAAIC,KAAKtB,QAClCc,GAAW,GAJQ,2CAAH,qDAOZS,EAAU,uCAAG,8BAAAN,EAAA,6DACXC,EADW,uCAC2BX,EAD3B,qBAECY,IAAMC,IAAIF,GAFX,OAEXG,EAFW,OAGjBT,EAAuBS,EAAIC,KAAKtB,QAChCc,GAAW,GAJM,2CAAH,qDA+ChB,OAxCAU,qBAAU,WACHX,IAGO,uCAAG,8BAAAI,EAAA,6DACPC,EADO,gDACwCX,EADxC,iBAC2D3B,GAD3D,SAEKuC,IAAMC,IAAIF,GAFf,OAEPG,EAFO,OAIbrC,EAAiBqC,EAAIC,MAErBR,GAAW,GANE,2CAAH,oDAQZW,GACAT,IACAO,OACC,CAAC3C,EAAS2B,EAAYM,IA0BvB,uBAAM1B,UAAU,OAAhB,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBACEO,IAAI,uFACJP,UAAU,OACVU,IAAI,gBAEN,qBAAKV,UAAU,MAAf,SACE,0DAEF,qBAAKA,UAAU,MAAf,SACE,sDAGJ,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,yCAAf,SACE,wBAAOA,UAAU,mBAAjB,UACE,uBACEA,UAAU,8BACVgB,GAAG,YACHD,KAAK,OACLwB,OAAO,SACPC,YAAY,gBACZC,SAhDI,SAACC,GACjBrB,EAAcqB,EAAEC,OAAOC,OACvBhB,EAAW,IA+CCiB,WAAY,SAACH,GA1CP,UA0C4BA,EA1CpCI,KACRnB,GAAW,MA2CH,uBACEX,GAAG,cACHhB,UAAU,8BACVe,KAAK,SACL6B,MAAM,SACNzC,QAAS,kBAAMwB,GAAW,gBAMpC,qBAAK3B,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACGJ,EACC,qBAAKI,UAAU,yCAAf,SACkC,IAA/BJ,EAAcmD,MAAMlC,OACnB,6CAEA,gCACE,cAAC,EAAD,CACEpB,QAASA,EACTC,SA5DD,WACC,IAAZD,IAGJmC,EAAWnC,EAAU,GACrBkC,GAAW,KAwDKhC,SAtDD,WACfiC,EAAWnC,EAAU,GACrBkC,GAAW,IAqDK/B,cAAeA,EACfC,iBAAkBA,IAEpB,qBAAKG,UAAU,MAAf,SACGJ,EAAcmD,MAAMC,KAAI,SAACxC,GAAD,OACvB,cAAC,EAAD,CACEA,OAAQA,EACRM,UAAWQ,EACX2B,QAASzB,cAQrB,gCCtIG0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.600b10ca.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faChevronRight,\n  faChevronLeft,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nlibrary.add(faChevronRight, faChevronLeft);\n\nconst Pagination = ({\n  pageNum,\n  prevPage,\n  nextPage,\n  searchResults,\n  setSearchResults,\n}) => {\n  console.log(searchResults);\n\n  return (\n    <div className=\"row mt-3 mb-3\">\n      {/* If the page we are on is the only page in the results, do not show prev page numbers, otherwise do */}\n      <div className=\"col\">\n        {searchResults.total_count > 30 && pageNum > 1 ? (\n          <div className=\"row\">\n            <div className=\"col\">\n              <FontAwesomeIcon\n                icon={faChevronLeft}\n                onClick={prevPage}\n                className=\"text-muted fa-icon\"\n                size=\"2x\"\n              />\n            </div>\n            <div className=\"col text-muted fa-icon\">\n              <h6>{pageNum - 1}</h6>\n            </div>\n            <div className=\"col d-flex justify-content-center\">\n              <h5 className=\"highlight-page\">{pageNum}</h5>\n            </div>\n            <div className=\"col d-flex justify-content-end\">\n              <h5>{pageNum + 1}</h5>\n            </div>\n            <div className=\"col d-flex justify-content-end\">\n              <FontAwesomeIcon\n                icon={faChevronRight}\n                onClick={nextPage}\n                className=\"text-muted fa-icon\"\n                size=\"2x\"\n              />\n            </div>\n          </div>\n        ) : (\n          <div className=\"row mb-3\">\n            {pageNum > 1 ? (\n              <div className=\"col d-flex justify-content-start\">\n                <FontAwesomeIcon\n                  icon={faChevronLeft}\n                  onClick={prevPage}\n                  className=\"text-muted fa-icon\"\n                  size=\"2x\"\n                />\n                <div className=\"col text-muted fa-icon\">\n                  <h6>{pageNum - 1}</h6>\n                </div>\n              </div>\n            ) : (\n              <div></div>\n            )}\n            {pageNum - 1 === 0 ? (\n              <div></div>\n            ) : (\n              <div className=\"col text-center text-muted fa-icon\">\n                <h6>{pageNum - 1}</h6>\n              </div>\n            )}\n            <div className=\"col text-center\">\n              <div className=\"d-flex justify-content-center\">\n                <h5 className=\"highlight-page\">{pageNum}</h5>\n              </div>\n            </div>\n            {searchResults.total_count / 30 < 1 ? (\n              <div></div>\n            ) : (\n              <div className=\"col text-center text-muted fa-icon\">\n                <h6>{pageNum + 1}</h6>\n              </div>\n            )}\n            {searchResults.total_count <= 30 ? (\n              <div></div>\n            ) : (\n              <div className=\"col d-flex justify-content-end\">\n                <FontAwesomeIcon\n                  icon={faChevronRight}\n                  onClick={nextPage}\n                  className=\"text-muted fa-icon\"\n                  size=\"2x\"\n                />\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nfunction Result(props) {\n  return (\n    <div className=\"col justify-content-center mb-3\" key={props.person.id}>\n      <div className=\"d-flex justify-content-center mb-1\">\n        <img\n          src={props.person.avatar_url}\n          className=\"avatar\"\n          alt=\"user avatar\"\n        />\n      </div>\n      <div className=\"text-center\">\n        Username: <span>{props.person.login}</span>\n      </div>\n      <div className=\"text-center\">\n        <span>Starred: {props.person.starred_url.length}</span>\n      </div>\n      <div className=\"text-center\">\n        <span>Followers: {props.followers}</span>\n      </div>\n      <div className=\"text-center\">\n        <span>Type: {props.person.type}</span>\n      </div>\n    </div>\n  );\n}\nexport default Result;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Pagination from \"./Pagination\";\nimport Result from \"./Result\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faChevronRight,\n  faChevronLeft,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nlibrary.add(faChevronRight, faChevronLeft);\nfunction App() {\n  // todo: Make an empty array\n  const [searchResults, setSearchResults] = useState(undefined);\n  // todo: set instead of results.pagination.whatever\n  // const [pagResults, setPagResults] = useState(null);\n  const [searchName, setSearchName] = useState(\"\");\n  const [searchResultFollowers, setSearchResultFollowers] = useState(\"\");\n  const [searchResultStarred, setSearchResultStarred] = useState(\"\");\n  //Pagination\n  const [loading, setLoading] = useState(false);\n  const [pageNum, setPageNum] = useState(1);\n\n  const getFollowers = async () => {\n    const url = `https://api.github.com/users/${searchName}/followers`;\n    const res = await axios.get(url);\n    setSearchResultFollowers(res.data.length);\n    setLoading(false);\n  };\n\n  const getStarred = async () => {\n    const url = `https://api.github.com/users/${searchName}/starred`;\n    const res = await axios.get(url);\n    setSearchResultStarred(res.data.length);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (!loading) {\n      return;\n    }\n    const getApi = async () => {\n      const url = `https://api.github.com/search/users?q=${searchName}&page=${pageNum}`;\n      const res = await axios.get(url);\n      // todo: res.data.results\n      setSearchResults(res.data);\n      // todo: setPagResults: res.data.pagination\n      setLoading(false);\n    };\n    getApi();\n    getFollowers();\n    getStarred();\n  }, [pageNum, searchName, loading]);\n\n  const queryName = (e) => {\n    setSearchName(e.target.value);\n    setPageNum(1);\n  };\n\n  // handle \"enter\" keypress\n  const handleKeypress = (event) => {\n    if (event.key === \"Enter\") {\n      setLoading(true);\n    }\n  };\n\n  const prevPage = () => {\n    if (pageNum === 1) {\n      return;\n    }\n    setPageNum(pageNum - 1);\n    setLoading(true);\n  };\n  const nextPage = () => {\n    setPageNum(pageNum + 1);\n    setLoading(true);\n  };\n  return (\n    <main className=\"mt-5\">\n      <div className=\"container\">\n        <div className=\"col\">\n          <img\n            src=\"https://res.cloudinary.com/dsoyemwut/image/upload/v1630184955/github-logo_vtdjl9.png\"\n            className=\"logo\"\n            alt=\"GitHub Logo\"\n          />\n          <div className=\"row\">\n            <h1>GitHub User Search API</h1>\n          </div>\n          <div className=\"row\">\n            <span>by Ryan Booth</span>\n          </div>\n        </div>\n        <div className=\"search-container\">\n          <div className=\"d-flex row mt-3 px-4 results-searchbar\">\n            <label className=\"d-flex px-0 mb-3\">\n              <input\n                className=\"col text-center input-field\"\n                id=\"textInput\"\n                type=\"text\"\n                search=\"search\"\n                placeholder=\"Search GitHub\"\n                onChange={queryName}\n                onKeyPress={(e) => handleKeypress(e)}\n              />\n              <input\n                id=\"inputButton\"\n                className=\"btn border border-secondary\"\n                type=\"submit\"\n                value=\"search\"\n                onClick={() => setLoading(true)}\n              />\n            </label>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          {searchResults ? (\n            <div className=\"result col justify-content-center mb-3\">\n              {searchResults.items.length === 0 ? (\n                <div>No Results</div>\n              ) : (\n                <div>\n                  <Pagination\n                    pageNum={pageNum}\n                    prevPage={prevPage}\n                    nextPage={nextPage}\n                    searchResults={searchResults}\n                    setSearchResults={setSearchResults}\n                  />\n                  <div className=\"row\">\n                    {searchResults.items.map((person) => (\n                      <Result\n                        person={person}\n                        followers={searchResultFollowers}\n                        starred={searchResultStarred}\n                      />\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}